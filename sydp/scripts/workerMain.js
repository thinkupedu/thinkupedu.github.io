"use strict";{async function a(a){if(c)throw new Error("already initialised");c=!0;const e=a["baseUrl"];self.devicePixelRatio=a["devicePixelRatio"];const f=a["workerDependencyScripts"].map((a)=>{let b=a;return b=a instanceof Blob?URL.createObjectURL(a):new URL(b,e).toString(),b}),g=[];self.runOnStartup=function(a){if("function"!=typeof a)throw new Error("runOnStartup called without a function");g.push(a)};const h=a["projectScripts"];if(h&&0<h.length){const c=a["projectScriptsStatus"];self["C3_ProjectScriptsStatus"]=c;try{importScripts(...h.map((a)=>a[1]))}catch(d){return console.error("[Preview] Error loading project scripts: ",d),void b(h,c,a["messagePort"])}}a["runOnStartupFunctions"]=g;const i=a["engineScripts"].map((a)=>new URL(a,e).toString());try{importScripts(...[...f,...i])}catch(a){console.error("[C3 runtime] Failed to load all engine scripts in worker: ",a)}if("preview"===a["exportType"]&&"object"!=typeof self.C3.ScriptsInEvents){return console.error("[C3 runtime] Failed to load JavaScript code used in events. Check all your JavaScript code has valid syntax."),void a["messagePort"].postMessage({"type":"alert","message":"Failed to load JavaScript code used in events. Check all your JavaScript code has valid syntax."})}d=self["C3_CreateRuntime"](a),await self["C3_InitRuntime"](d,a)}function b(a,b,c){for(const[d,e]of a)if(!b[d])try{importScripts(e)}catch(a){const a=`Failed to load project script '${d}'. Check all your JavaScript code has valid syntax.`;return console.error("[Preview] "+a),void c.postMessage({"type":"alert","message":a})}}let c=!1,d=null;self.addEventListener("message",(b)=>{const c=b.data,d=c["type"];if("init-runtime"===d)a(c);else throw new Error(`unknown message '${d}'`)})}